
close all
clear 

%speed of sound
speed_of_sound = 1500;

%hydrophone base vector from 1 to 2
base_vector = [0.01, 0.65, 0.0];

%initial pose of hydrophone 1
%make sure to convert from ros quat to matlab quat
pose1_h1 = [-0.1644,0.295,-0.988,1,-0.0001,0.0002,0.001];

%second pose of hydrophone 2
pose2_h1 = [-.1644,2.2512,-.9885,.9992,0.0402,0,0.0002];

%pinger pose
pose_pinger = [3, 2,-1,0,0,0,0];

%calculaete the second hydrophone poses
rotm1 = quat2rotm([pose1_h1(4), pose1_h1(5), pose1_h1(6), pose1_h1(7)]);
pose1_h2 = (rotm1 * base_vector' + pose1_h1(1:3)')';

rotm2 = quat2rotm([pose2_h1(4), pose2_h1(5), pose2_h1(6), pose2_h1(7)]);
pose2_h2 = (rotm2 * base_vector' + pose2_h1(1:3)')';

%calcate the distances for the four hydrophones from the pinger
dist1_h1 = norm(pose_pinger(1:3) - pose1_h1(1:3));
dist1_h2 = norm(pose_pinger(1:3) - pose1_h2(1:3));
dist2_h1 = norm(pose_pinger(1:3) - pose2_h1(1:3));
dist2_h2 = norm(pose_pinger(1:3) - pose2_h2(1:3));

%calculate the time delta for each pose
delta_d1 = (dist1_h2 - dist1_h1);
delta_d2 = (dist2_h2 - dist2_h1);

%calculate the distances othogonal from initial hydrophone base vector
pos1_mid = (pose1_h2 + pose1_h1(1:3)) / 2;
pos1_mid_to_pinger = [pose_pinger(1:2),0] - pos1_mid;

%rotate to new frame
sol = rotm1 * pos1_mid_to_pinger';

%plot the senario
figure(1)
hold on;
plot3([pose1_h1(1);pose1_h2(1)], [pose1_h1(2);pose1_h2(2)],[pose1_h1(3);pose1_h2(3)], "b.-", [pose2_h1(1);pose2_h2(1)], [pose2_h1(2);pose2_h2(2)],[pose2_h1(3);pose2_h2(3)], "r.-")
plot3([pose_pinger(1)], [pose_pinger(2)], [pose_pinger(3)], "g*")
hold off

%calcuate a1 and a2 values
disp("a1: " + num2str(norm(pose_pinger(1:2) - pose1_h1(1:2))))
disp("a2: " + num2str(norm(pose_pinger(1:2) - pose2_h1(1:2))))

[solve_x_p, solve_y] = solve_two_pulse_system_depth(delta_d1, delta_d2, pose1_h1', pose2_h1', base_vector', 1, [100; 99], pose_pinger(3));
[solve_x, solve_y] = solve_two_pulse_system_depth(delta_d1, delta_d2, pose1_h1', pose2_h1', base_vector', -1, [100; 99], pose_pinger(3));
